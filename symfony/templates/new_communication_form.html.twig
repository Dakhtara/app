{{ form_row(form.volunteers) }}

{% set max_length = constant('App\\Entity\\Message::MAX_LENGTH') %}

<div id="message-container">
    <div class="h4">{{ 'form.communication.fields.message'|trans }}</div>
    {{ form_errors(form.message) }}
    <div class="textarea-wrapper">
        {{ form_widget(form.message) }}
    </div>
    <div class="float-right"><span id="message-size">0</span> / {{ max_length }}</div>
</div>

<div class="clearfix"></div>

<div class="h4">{{ 'form.communication.fields.response_title'|trans }}</div>

{#
{{ form_row(form.type) }}
#}

{{ form_label(form.answers) }}

{{ render(controller('\\App\\Controller\\PrefilledAnswersController::renderSelect', {campaignId: campaign.id|default(null)})) }}

{{ form_row(form.answers, {label: false}) }}

{{ form_row(form.multipleAnswer) }}

<div class="h4">{{ 'form.communication.fields.other_options'|trans }}</div>

{{ form_row(form.geoLocation) }}

<div class="h4">{{ 'form.communication.fields.preview'|trans }}</div>

<div id="message-preview" style="background-color:#eeeeee;padding:5px;margin-bottom:10px;">
    &nbsp;
</div>

<div style="margin-bottom:10px;">
    {{ 'form.communication.fields.length'|trans }}
    <span id="message-length">--</span>
    <br/>
    {{ 'form.communication.fields.cost'|trans }}
    <span id="message-cost">--</span>
</div>

<script type="text/javascript" src="{{ asset('js/jquery.collection.js') }}"></script>
<script type="text/javascript">

    {# Answer's collection #}
    $('.collection').collection({
        allow_up: false,
        allow_down: false,
        add_at_the_end: true,
        init_with_n_elements: 2,
        fade_in: false,
        fade_out: false,
        max: 10,
        add: '<a href="#" class="btn btn-light add-answer" style="width:100%;">{{ 'form.communication.fields.add_answer'|trans|e('js') }}</a>',
    });

    {# Update message size automatically #}
    function updateMessageSize() {
        var textArea = $('#{{ form.message.vars.id }}');
        if (textArea.val().length > {{ max_length }}) {
            textArea.val(
                textArea.val().substr(0, {{ max_length }})
            );
        }
        $('#message-size').html(textArea.val().length);
    }

    updateMessageSize();
    $('#{{ form.message.vars.id }}').keyup(updateMessageSize);

    {# Disables "enter" key on input fields #}
    $('form').keypress(function (e) {
        if (e.keyCode == 13 && $(e.target).not('textarea, button').length) {
            e.preventDefault();
        }
    });

    {# Refresh preview if form is changed #}
    var previewTimeout = null;
    $('body').on('change keyup', 'input, textarea', function () {
        clearTimeout(previewTimeout);
        previewTimeout = setTimeout(function () {
            $.post('{{ path('communication_preview') }}', $('form').serialize(), function (data) {
                if (data.success) {
                    $('#message-preview').html(nl2br(data.message));
                    $('#message-cost').html(data.cost);
                    $('#message-length').html(data.length);
                } else {
                    $('#message-preview').html('&nbsp;');
                    $('#message-cost').html('--');
                    $('#message-length').html('--');
                }
            });
        }, 1000);
    });

</script>
